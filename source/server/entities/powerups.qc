.float zombie_drop_id;
.float flashtime;
.float flash_step;

void() maxammo =
{
	entity tempe, temp;
	
	tempe = find (world, classname, "player");
	while (tempe)
	{	
		if (!tempe.downed)
		{
			if (tempe.weapon)
			{
				tempe.currentammo = getWeaponAmmo(tempe.weapon);
				if (!tempe.currentmag)
				{
					temp = self;
					self = tempe;
					W_Reload(S_BOTH);
					self = temp;
				}
			}
			if (tempe.secondaryweapon)
				tempe.secondaryammo = getWeaponAmmo(tempe.secondaryweapon);
			
			tempe.primary_grenades = 4;
			
			if (tempe.grenades & 2)
        tempe.secondary_grenades = 2;
		}
		#ifndef PSP
		ScrollText("MAX AMMO!", tempe);
		#endif
		
		tempe = find (tempe, classname, "player");
	}
}


void() nuke =
{
	local entity oldself;
	local entity who;
	local float killcount;
	oldself = self;
	
	killcount = 0;
	
	who = find(world,classname,"ai_zombie");
	while(who != world)
	{
		if(who.health)
		{
			self = who;
			self.th_die();
			self = oldself;
			killcount++;
		}
		
		who = find(who,classname,"ai_zombie");
	}

	#ifndef PSP
	if (killcount == 1) {
		GiveAchievement(4, pl1);
	}
	#endif
	
	who = find(world,classname,"player");
	while(who)
	{
		addmoney(who, 400, 1);
		who = find(who,classname,"player");
	}
}

void() carpenter =
{
	local entity oldself;
	local entity who;
	oldself = self;
	
	
	who = find(world,classname,"window");
	while(who != world)
	{
		if(who.health < 6 && who.health != -10)//-10 is for boardless windows
		{
			self = who;
			window_carpenter_1 ();
			who.health = 6;
			self = oldself;
		}
		
		who = find(who,classname,"window");
	}
	
	who = find(world,classname,"player");
	while(who)
	{
		addmoney(who,200,1);
		
		who = find(who,classname,"player");
	}
	total_windows_down = 0;
}

void() give_perk =
{
  	local float t;
  
  	t = random();
  	
  	if (t < 0.166 && !(other.perks & P_REVIVE)) {
  		other.perks = other.perks | 8;
  	} else if (t < 0.333 && !(other.perks & P_JUG)) {
  		other.perks = other.perks | 1;
  	} else if (t < 0.5 && !(other.perks & P_DOUBLE)) {
		other.perks = other.perks | 2;
  	} else if (t < 0.6666 && !(other.perks & P_SPEED)) {
  		other.perks = other.perks | 4;
  	} else if (t < 0.8333 && !(other.perks & P_FLOP)) {
  		other.perks = other.perks | 16;
  	} else if (t < 1 && !(other.perks & P_STAMIN)) {
  		other.perks = other.perks | 32;
  	} else if (t <= 1 && (other.perks & P_STAMIN) && (other.perks & P_REVIVE) && (other.perks & P_JUG) && (other.perks & P_DOUBLE) && (other.perks & P_SPEED) && (other.perks & P_FLOP))
		return;
	else
    	give_perk();
}




void() powerup_flash =
{
	if(self.flash_step == 0)
	{
		self.flash_step = 1;
		self.flashtime = time + 3;
		self.nextthink = time + 0.6;
	}
	else if(self.flash_step == 1)
	{
		self.nextthink = time + 0.6;
		
		if(self.flashtime < time)
		{
			self.flash_step = 2;
			self.nextthink = time + 0.3;
			self.flashtime = time + 3;
		}

	}
	else if(self.flash_step == 2)
	{
		self.nextthink = time + 0.3;
		
		if(self.flashtime < time)
		{
			self.flash_step = 3;
			self.nextthink = time + 0.15;
			self.flashtime = time + 3;
		}
		
	}
	else if(self.flash_step == 3)
	{
		self.nextthink = time + 0.15;
		if(self.flashtime < time)
		{
			setmodel(self,"");
			setmodel(self.owner,"");
			remove(self.owner);
			remove(self);
			return;
		}
	}
	
	if(self.model == "")
	{
		if(self.zombie_drop_id == 1)
			setmodel(self,"progs/Misc/maxammo!.mdl");
		if(self.zombie_drop_id == 2)
			setmodel(self,"progs/Misc/x2!.mdl");
		if(self.zombie_drop_id == 3)
			setmodel(self,"progs/Misc/instakill!.mdl");
		if(self.zombie_drop_id == 4)
			setmodel(self,"progs/Misc/nuke!.mdl");
		if(self.zombie_drop_id == 5)
			setmodel(self,"progs/Misc/carpenter!.mdl");
	}
	else
	{
		setmodel(self,"");
	}
};

void() powerup_touch =
{
  local float t;
  local float exp;
  
  if (x2_finished > time)
	exp = 2;
  else
	exp = 1;
  
  t = random();
  
	if(other.classname == "player")
	{
		sound(self.owner,CHAN_VOICE,"sounds/pu/pickup.wav",1,ATTN_NONE);
		
		if(self.zombie_drop_id == 1)
		{
			sound(self,CHAN_VOICE,"sounds/pu/maxammo.wav",1,ATTN_NONE);
			maxammo();
		}
		else if(self.zombie_drop_id == 2)
		{
			sound(self,CHAN_VOICE,"sounds/pu/double_points.wav",1,ATTN_NONE);   

			x2_finished = time + 30;
			#ifndef VITA
			other.x2_icon = true;
			#endif
		}
		else if(self.zombie_drop_id == 3)
		{
			sound(self,CHAN_VOICE,"sounds/pu/insta_kill.wav",1,ATTN_NONE);
			instakill_finished = time + 30;
			#ifndef VITA
			other.insta_icon = true;
			#endif
		}
		else if(self.zombie_drop_id == 4)
		{
			sound(self,CHAN_VOICE,"sounds/pu/nuke.wav",1,ATTN_NONE);
			nuke();
		}
		else if(self.zombie_drop_id == 5)
		{
			addmoney(other, 200*exp, 0);
			carpenter();
		}
		else if(self.zombie_drop_id == 6)
		{
			give_perk();
		}
		stuffcmd(other, "bf\n");
		remove(self.owner);
		remove(self);
	}
};

void() sparkle_think =
{
	local float f;
	f = self.frame;
	local float r;
	while(f == self.frame)
	{
		r = random();
		r = ((r > 0.2) ? 1 : 0) + ((r > 0.4) ? 1 : 0) + ((r > 0.6) ? 1 : 0) + ((r > 0.8) ? 1 : 0);
		f = r;
	}
	self.frame = f;
	
	self.think = sparkle_think;
	self.nextthink = time + 0.1;
	
	if(self.calc_time <= time)
	{
		sound(self,CHAN_VOICE,"sounds/pu/powerup.wav",0.6,ATTN_NORM);
		self.calc_time = time + 2.998;
	}
	
};

string(float type) getPowerupModel = 
{
	switch(type) {
		case 1: return "progs/Misc/maxammo!.mdl"; break;
		case 2: return "progs/Misc/x2!.mdl"; break;
		case 3: return "progs/Misc/instakill!.mdl"; break;
		case 4: return "progs/Misc/nuke!.mdl"; break;
		case 5: return "progs/Misc/carpenter!.mdl"; break;
		default: return ""; break;
	}
}

float last_pu;
void(vector where, float type) Spawn_Powerup =
{
	entity new_powerup;
	float t, am, carp, perk;

	new_powerup = spawn();
	new_powerup.origin = where;
	setorigin(new_powerup, new_powerup.origin);
	new_powerup.solid = SOLID_TRIGGER;
	new_powerup.classname = "item_powerup";

	
	setsize (new_powerup, VEC_HULL_MIN, VEC_HULL_MAX);
	new_powerup.movetype = MOVETYPE_NONE;

	#ifdef PSP
	new_powerup.effects = EF_GREEN;
	#endif
	//new_powerup.effects = new_powerup.effects | EF_BRIGHTLIGHT;
	
	//=================== Sparkle Effects =====================
	entity twlt_Sparkle;
	twlt_Sparkle = spawn();
	new_powerup.owner = twlt_Sparkle; //just a reference so power up can delete the sparkle later on
	
	setorigin(twlt_Sparkle,where);
	setmodel(twlt_Sparkle,"progs/Sprites/sprkle.spr");
	
	twlt_Sparkle.think = sparkle_think;
	twlt_Sparkle.nextthink = time + 0.1;
	sound(twlt_Sparkle,CHAN_VOICE,"sounds/pu/powerup.wav",0.6,ATTN_NORM);
	
	sound(new_powerup,CHAN_AUTO,"sounds/pu/drop.wav",1,ATTN_NONE);
	//========================================================
	t = random();

	//SO MUCH PRETTIER AHHHHHHH - moto
	if (type) {
		setmodel(new_powerup, getPowerupModel(type));
		new_powerup.zombie_drop_id = type;
	} else {
		am = 5;

		if (total_windows_down >= 5) {
			am++;
			carp = true;
		}

		if (G_PERKPOWER) {
			am++;
			perk = true;
		}

		if (t < (1/am)) {
			setmodel(new_powerup, getPowerupModel(1));
			new_powerup.zombie_drop_id = 1;
		} else if (t < (2/am)) {
			setmodel(new_powerup, getPowerupModel(2));
			new_powerup.zombie_drop_id = 2;
		} else if (t < (3/am)) {
			setmodel(new_powerup, getPowerupModel(3));
			new_powerup.zombie_drop_id = 3;
		} else if (t < (4/am)) {
			setmodel(new_powerup, getPowerupModel(4));
			new_powerup.zombie_drop_id = 4;
		} else if (t < (5/am) && am > 5 && carp) {
			setmodel(new_powerup, getPowerupModel(5));
			new_powerup.zombie_drop_id = 5;
		} else if (t < (6/am) && am == 6 && perk) {
			setmodel(new_powerup, getPowerupModel(6));
			new_powerup.zombie_drop_id = 6;
		}
	}
	
	last_pu = new_powerup.zombie_drop_id;
	new_powerup.touch = powerup_touch;
	
	new_powerup.think = powerup_flash;
	new_powerup.nextthink = time + 21;
	totalpowerups = 1;
}